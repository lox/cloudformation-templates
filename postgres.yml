---
AWSTemplateFormatVersion: '2010-09-09'
Description: 'PostgreSQL: Application database'

Parameters:
  VpcStack:
    Type: String
    Description: The name of the VPC stack
    Default: vpc

  DBName:
    Description: The database name
    Type: String
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    Default: vcat

  DBUser:
    Description: The database admin account username
    Type: String
    AllowedPattern: "[a-zA-Z][a-zA-Z0-9]*"
    Default: vcat

  DBPassword:
    NoEcho: 'true'
    Description: The database admin account password
    Type: String
    MinLength: 8
    MaxLength: 41

  DBAllocatedStorage:
    Default: 5
    Description: The size of the database (Gb)
    Type: Number

  DBInstanceClass:
    Default: db.t2.small
    Description: The database instance type
    Type: String

  DBSnapshotIdentifier:
    Description: Optional- The RDS snapshot name to restore to the new DB instance.
    Type: String
    Default: ''

  DBStorageEncrypted:
    Default: "false"
    Description: Specifies whether the DB instance is encrypted
    Type: String
    AllowedValues:
    - "true"
    - "false"

  MultiAZ:
    Default: "false"
    Description: Create a multi-AZ RDS database instance
    Type: String
    AllowedValues: ["true", "false"]

  PostgresVersion:
    Default: 9.5.4
    Description: The PostgreSQL version
    Type: String

Conditions:
  UseDbSnapshot:
    Fn::Not:
    - Fn::Equals:
      - Ref: DBSnapshotIdentifier
      - ''

Resources:
  DBSubnetGroup:
    Type: AWS::RDS::DBSubnetGroup
    Properties:
      DBSubnetGroupDescription: Subnets available for the RDS DB Instance
      SubnetIds:
        - { 'Fn::ImportValue': !Sub '${VpcStack}-Subnet1Private' }
        - { 'Fn::ImportValue': !Sub '${VpcStack}-Subnet2Private' }

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow access to the database
      VpcId: { 'Fn::ImportValue': !Sub '${VpcStack}-VpcId' }
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: '5432'
        ToPort: '5432'
        CidrIp: 10.0.0.0/16

  DB:
    Type: AWS::RDS::DBInstance
    Properties:
      Engine: postgres
      AllocatedStorage: !Ref DBAllocatedStorage
      AutoMinorVersionUpgrade: 'true'
      VPCSecurityGroups: [ !Ref SecurityGroup ]
      DBName: !If [ UseDbSnapshot, !Ref "AWS::NoValue", !Ref DBName ]
      DBInstanceClass: !Ref DBInstanceClass
      DBSubnetGroupName: !Ref DBSubnetGroup
      EngineVersion: !Ref PostgresVersion
      MasterUsername: !Ref DBUser
      MasterUserPassword: !Ref DBPassword
      MultiAZ: !Ref MultiAZ
      StorageType: gp2
      PubliclyAccessible: false
      StorageEncrypted: !Ref DBStorageEncrypted
      DBSnapshotIdentifier: !If [ UseDbSnapshot, !Ref DBSnapshotIdentifier, !Ref "AWS::NoValue"]
    DeletionPolicy: Snapshot

Outputs:
  ConnectionString:
    Description: Connection string for database
    Value: !Join
      - ""
      -
        - "postgresql+psycopg2://"
        - !Ref DBUser
        - ":"
        - !Ref DBPassword
        - "@"
        - !GetAtt [DB, Endpoint.Address]
        - ":"
        - !GetAtt [DB, Endpoint.Port]
        - "/"
        - !Ref DBName

  DBAddress:
    Description: address of database endpoint
    Value: !GetAtt [DB, Endpoint.Address]

  DBPort:
    Description: database endpoint port
    Value: !GetAtt [DB, Endpoint.Port]
